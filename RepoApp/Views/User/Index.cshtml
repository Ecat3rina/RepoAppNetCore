@{
    ViewBag.Title = "Index";
}
<h2>Users</h2>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="ModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="modal-title"></h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>
            <div class="modal-body">
                <!-- Modal body -->
            </div>

        </div>
    </div>
</div>


<table id="myTable" class="table table-bordered table-striped">
</table>

<a href="https://localhost:44379/User/add/" class="btn btn-success userAdd"> Add user</a>


@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            var logout = $("a[href$='Account/LogOut']").text();
            var loggedUsername = logout.replace('Exit ', '');
            var table;
            var connection;

            $.ajax(
                {
                    type: "Get",
                    url: "https://localhost:44379/api/User/GetRole/",
                    dataType: 'JSON',
                    data: {
                        name: loggedUsername,
                    },
                    success: function (response) {
                        if (response == "Admin") {


                             table=$("#myTable").DataTable({
                                autoWidth: false,
                                serverSide: true,

                                "columns": [
                                    {
                                        data: 'id',
                                        name: 'id',
                                        visible: false
                                    },
                                    {

                                        data: 'userName',
                                        name: 'userName',
                                        title: 'Username',
                                        "autoWidth": true
                                    },
                                    {
                                        data: 'fullName',
                                        name: 'fullName',
                                        title: 'Full name',
                                        "autoWidth": true
                                    },
                                    {
                                        data: 'email',
                                        name: 'email',
                                        title: 'E-mail',
                                        "autoWidth": true
                                    },
                                    {
                                        data: 'isConnected',
                                        width: '10px',
                                        title: 'Connection',
                                        className: 'text-center',
                                        render: function (data, type, row) {
                                            if (!data) return "<span class='badge badge-danger'>OFF</span>";
                                            else return "<span class='badge badge-success'>ON</span>";
                                        }
                                    },

                                    {
                                        data: null,
                                        orderable: false,
                                        className: 'text-center',
                                        render: function (data, type, row) {
                                            var link = "https://localhost:44379/api/user/GetEdit/" + row.id;
                                            return "<a href='" + link + "' class='btn btn-warning userEdit' title='Edit'><i class='fas fa-edit'></i></a>";
                                        }
                                    },
                                    {
                                        data: null,
                                        orderable: false,
                                        className: 'text-center',
                                        render: function (data, type, row) {
                                            var link = "https://localhost:44379/api/user/GetDetails/" + row.id;
                                            return "<a href='" + link + "' class='btn btn-info userInfo' title='Details'><i class='fas fa-info-circle'></i></a>";
                                        }
                                    },

                                ],

                                ajax: {
                                    url: "https://localhost:44379/api/User/GetUsers/",
                                    type: "POST",

                                },
                                initComplete: function () {
                                    var input = $(".dataTables_filter input").unbind();
                                    var inputVar = $(".dataTables_filter input");
                                    $("#myTable_filter").append(inputVar);
                                    $("#myTable_filter label").remove();
                                    self = this.api(),
                                        $searchButton = $("<button class='btn btn-sm btn-default'>")
                                            .text("Search")
                                            .click(function () {
                                                self.search(input.val()).draw();
                                            })
                                    $(".dataTables_filter").append($searchButton);
                                }
                            })

                        }
                         if (response == "Operator") {

                            $('.userAdd').hide();

                            table=$("#myTable").DataTable({

                                autoWidth: false,
                                serverSide: true,

                                "columns": [
                                    {
                                        data: 'id',
                                        name: 'id',
                                        visible: false
                                    },
                                    {

                                        data: 'userName',
                                        name: 'userName',
                                        title: 'Username',
                                        "autoWidth": true
                                    },
                                    {
                                        data: 'fullName',
                                        name: 'fullName',
                                        title: 'Full name',
                                        "autoWidth": true
                                    },
                                    {
                                        data: 'email',
                                        name: 'email',
                                        title: 'E-mail',
                                        "autoWidth": true
                                    },
                                    {
                                        data: 'isConnected',
                                        width: '5%',
                                        title: 'Connection',
                                        className: 'text-center',
                                        render: function (data, type, row) {
                                            if (!data) return "<span class='badge badge-danger'>OFF</span>";
                                            else return "<span class='badge badge-success'>ON</span>";
                                        }
                                    },

                                    {
                                        data: null,
                                        orderable: false,
                                        className: 'text-center',
                                        render: function (data, type, row) {
                                            var link = "https://localhost:44379/api/user/GetEdit/" + row.id;
                                            return "<a href='" + link + "' class='btn btn-warning userEdit' title='Edit'><i class='fas fa-edit'></i></a>";
                                        }
                                    },
                                    {
                                        data: null,
                                        orderable: false,
                                        className: 'text-center',
                                        render: function (data, type, row) {
                                            var link = "https://localhost:44379/api/user/GetDetails/" + row.id;
                                            return "<a href='" + link + "' class='btn btn-info userInfo' title='Details'><i class='fas fa-info-circle'></i></a>";
                                        }
                                    },
                                    @*{
                                        data: null,
                                        orderable: false,
                                        className: 'text-center',
                                        render: function (data, type, row) {
                                            return "<a href='@Url.Action("Delete","User")/" + row.Id + "' class='btn btn-danger userDelete' title='Delete'><span class='glyphicon glyphicon-remove'></span></a>";
                                        }
                                    }*@
                                ],

                                 ajax: {
                                     url: "https://localhost:44379/api/user/getusers/",

                                    type: "Post"
                                },

                                initComplete: function () {
                                    var input = $(".dataTables_filter input").unbind();
                                    var inputVar = $(".dataTables_filter input");
                                    $("#myTable_filter").append(inputVar);
                                    $("#myTable_filter label").remove();
                                    self = this.api(),
                                        $searchButton = $("<button class='btn btn-sm btn-default'>")
                                            .text("Search")
                                            .click(function () {
                                                self.search(input.val()).draw();
                                            })
                                    $(".dataTables_filter").append($searchButton);
                                }
                            })
                        }

                        if (response == "User") {

                            $('.userAdd').hide();

                           table= $("#myTable").DataTable({

                                autoWidth: false,
                                serverSide: true,

                                "columns": [
                                    {
                                        data: 'id',
                                        name: 'id',
                                        visible: false
                                    },
                                    {

                                        data: 'userName',
                                        name: 'userName',
                                        title: 'Username',
                                        "autoWidth": true
                                    },
                                    {
                                        data: 'fullName',
                                        name: 'fullName',
                                        title: 'Full name',
                                        "autoWidth": true
                                    },
                                    {
                                        data: 'email',
                                        name: 'email',
                                        title: 'E-mail',
                                        "autoWidth": true
                                    },
                                    {
                                        data: 'isConnected',
                                        width: '5%',
                                        title: 'Connection',
                                        className: 'text-center',
                                        render: function (data, type, row) {
                                            if (!data) return "<span class='badge badge-danger'>OFF</span>";
                                            else return "<span class='badge badge-success'>ON</span>";
                                        }
                                    },

                                    @*{
                                        data: null,
                                        orderable: false,
                                        className: 'text-center',
                                        render: function (data, type, row) {
                                            return "<a href='@Url.Action("GetEdit","User")/" + row.Id + "' class='btn btn-warning userEdit' title='Edit'><span class='glyphicon glyphicon-pencil'></span></a>";
                                        }
                                    },*@
                                    {
                                        data: null,
                                        orderable: false,
                                        className: 'text-center',
                                        render: function (data, type, row) {
                                            var link = "https://localhost:44379/api/user/GetDetails/" + row.id;
                                            return "<a href='" + link + "' class='btn btn-info userInfo' title='Details'><i class='fas fa-info-circle'></i></a>";
                                        }
                                    },
                                    @*{
                                        data: null,
                                        orderable: false,
                                        className: 'text-center',
                                        render: function (data, type, row) {
                                            return "<a href='@Url.Action("Delete","User")/" + row.Id + "' class='btn btn-danger userDelete' title='Delete'><span class='glyphicon glyphicon-remove'></span></a>";
                                        }
                                    }*@
                                ],

                                 ajax: {
                                   // url: "@Url.Action("GetUsers", "User", new { httproute = "ActionRoute" })",
                                     url: "https://localhost:44379/api/user/getusers/",

                                     type: "Post"
                                },
                                initComplete: function () {
                                    var input = $(".dataTables_filter input").unbind();
                                    var inputVar = $(".dataTables_filter input");
                                    $("#myTable_filter").append(inputVar);
                                    $("#myTable_filter label").remove();
                                    self = this.api(),
                                        $searchButton = $("<button class='btn btn-sm btn-default'>")
                                            .text("Search")
                                            .click(function () {
                                                self.search(input.val()).draw();
                                            })
                                    $(".dataTables_filter").append($searchButton);
                                }
                            })
                        }
                    }
                })



            var validationResult = {
                Valid: "Valid",
                UnValid: "UnValid"
            }

            $(document).on('submit', '#userAddPost', function (event) {
                event.preventDefault();
                
                $('#userAddPost')
                    .removeData("validator") /* added by the raw jquery.validate plugin */
                    .removeData("unobtrusiveValidation");  /* added by the jquery unobtrusive plugin*/

                $.validator.unobtrusive.parse('#userAddPost');

                if ($("#userAddPost").valid()) {

                    var _model =
                    {
                        UserName: $("#UserName").val(),
                        Password: $("#Password").val(),
                        Email: $("#Email").val(),
                        Fullname: $("#FullName").val(),
                        Roles: $("#Roles").val()
                    };

                    var userObj = $("form").serializeArray();

                    var logout = $("a[href$='Account/LogOut']").text();
                    var loggedUsername = logout.replace('Exit ', '');

                    var data = new FormData();

                    data.append("userData[]", $("#UserName").val())
                    data.append("userData[]", $("#Password").val())
                    data.append("userData[]", $("#Email").val())
                    data.append("userData[]", $("#FullName").val())
                    data.append("userData[]", $("#Roles").val())

                    $.ajax(
                        {
                            // url: "@Url.Action("Add", "User", new { httproute = "ActionRoute" })",
                            url: "https://localhost:44379/api/user/add/",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify(_model),
                            method: "Post",
                            dataType: 'json',
                            success: function (response) {
                                if (response.executionStatus == "OK") {
                                        $("#myModal").modal("hide");
                                        $('#myTable').DataTable().ajax.reload();
                                    }

                                if (response.executionStatus == "NOTVALID") {
                                        $(".modal-body").html(response.viewPage);
                                        $('select').selectpicker();
                                        $("#userAddPost").validate().showErrors({
                                            "UserName": response.validationMessages.UserName,
                                            "Email": response.validationMessages.Email
                                        })

                                    }

                               // }
                            }

                        })
                }
            });


            $(document).on('click', '.userAdd', function (event) {
                event.preventDefault();
                var myUrlAdd = this.pathname;
                
                    $.ajax(
                        {
                            async: true,
                            url: myUrlAdd,
                            success: function (data) {
                                $(".modal-body")[0].innerHTML = data;
                                $("#modal-title").text("Add user");
                                $('#myModal').modal();
                                $('select').selectpicker();
                                $('#myTable_length').remove();
                                $('.col-sm-12').first().append('<div class="dataTables_length" id="myTable_length"><label>Show <select name="myTable_length" aria-controls="myTable" class="custom-select custom-select-sm form-control form-control-sm"><option value="10">10</option><option value="25">25</option><option value="50">50</option><option value="100">100</option></select> entries</label></div>');
                            }
                        })

            })

            $(document).on('click', '.userInfo', function (event) {
                event.preventDefault();

                var urlinfo = this.pathname;
                var id = urlinfo.substring(urlinfo.lastIndexOf('/') + 1);
                var username;
                table.rows(function (idx, data, node) {
                    if (data.id === id) {
                        username = data.userName;
                    }

                    return false;
                });

                $.ajax(
                    {
                        async: true,
                        method: "Get",
                        url: "https://localhost:44379/api/User/GetDetails/" + id,
                        success: function (data) {
                            $.ajax({
                                 url: "https://localhost:44379/User/GetDetails/" + data.id,
                                method: "Get",
                                success: function (data) {
                                    $(".modal-body")[0].innerHTML = data;
                                    $("#modal-title").text(username + " details");
                                    $('#myModal').modal();
                                }
                            })

                        }
                    })
            });

            $(document).on('click', '.userDelete', function (event) {
                event.preventDefault();

                var myUrlInfo = this.pathname;

                $.ajax(
                    {
                        async: true,
                        url: myUrlInfo,
                        success: function (data) {
                            $(".modal-body")[0].innerHTML = data;
                            $("#modal-title").text("Delete user");
                            $('#myModal').modal();
                        }
                    })
            });


            $(document).on('submit', '#userDeletePost', function (event) {
                event.preventDefault();
                $.ajax(
                    {
                        url: "/user/delete",
                        data: {
                            Id: $("#Id").val(),
                        },
                        method: "Post",
                        success: function (response) {
                            $("#myModal").modal("hide");
                            $('#myTable').DataTable().ajax.reload();
                        }
                    })
            });

            $(document).on('click', '.userEdit', function (event) {
                event.preventDefault();
                var url = this.pathname;
                var id = url.substring(url.lastIndexOf('/') + 1);
                var username;
               
                table.rows(function (idx, data, node) {
                    if (data.id === id) {
                        username = data.userName;
                    }

                    return false;
                });

                table.rows(function (idx, data, node) {
                    if (data.id === id) {
                        connection = data.isConnected;
                    }

                    return false;
                });

                $.ajax(
                    {
                        async: true,
                        method: "Get",
                        url: "https://localhost:44379/api/User/GetEdit/"+id,

                        success: function (data) {
                            $.ajax({
                                url: "https://localhost:44379/User/GetEdit/" + data.id,
                                data: data,
                                method: "Get",
                                success: function (data) {
                                    $(".modal-body")[0].innerHTML = data;
                                    $("#modal-title").text("Edit " + username);
                                    $('#myModal').modal();
                                    $('select').selectpicker();
                                    $("[name='my-checkbox1']").bootstrapSwitch();
                                    $("[name='my-checkbox2']").bootstrapSwitch();
                                    $("[name='my-checkbox3']").bootstrapSwitch();

                                    $("[name='my-checkbox1']").bootstrapSwitch('state', false);
                                    $(".changeRoles").hide();
                                    $(".newpassword").hide();

                                    $("[name='my-checkbox3']").on('switchChange.bootstrapSwitch', function (e, data) {
                                        var state = $(this).bootstrapSwitch('state');
                                        if (state) {
                                            $(".changeRoles").show();
                                        }
                                        else {
                                            $(".changeRoles").hide();
                                        }
                                    });

                                    $("[name='my-checkbox2']").on('switchChange.bootstrapSwitch', function (e, data) {
                                        var state = $(this).bootstrapSwitch('state');
                                        if (state) {
                                            $(".newpassword").show();
                                        }
                                        else {
                                            $(".newpassword").hide();
                                        }
                                    });

                                    
                                   

                                    /////////////////////


                                        //if ($("#IsChangePassword").is(":checked")) {
                                        //    $("#ConfirmPassword").prop("disabled", false);
                                        //    $("#Password").prop("disabled", false);
                                        //}
                                        //else {
                                        //    $("#ConfirmPassword").prop("disabled", true);
                                        //    $("#Password").prop("disabled", true);
                                        //}

                                        //$("#IsChangePassword").on("change", function (e) {
                                        //    if ($(this).is(":checked")) {
                                        //        $("#ConfirmPassword").prop("disabled", false);
                                        //        $("#Password").prop("disabled", false);
                                        //    }
                                        //    else {
                                        //        $("#ConfirmPassword").prop("disabled", true);
                                        //        $("#Password").prop("disabled", true);
                                        //    }
                                        //})


                                        //$(".disable").css({ 'opacity': '1' });

                                        //if ($("#IsChangeRoles").is(':checked'))
                                        //    $('#Roles').attr('disabled', false);
                                        //else {
                                        //    $('#Roles').attr("disabled", true);
                                        //}



                                        //$('#IsChangeRoles').change(function () {
                                        //    if ($(this).is(':checked'))
                                        //        $('#Roles').attr('disabled', false);
                                        //    else
                                        //        $('#Roles').attr("disabled", true);
                                        //})
                                    }

                            })
                        }
                    })

            });

            $(document).on('submit', '#userEditPost', function (event) {
                event.preventDefault();
                

                $('#userEditPost')
                    .removeData("validator") /* added by the raw jquery.validate plugin */
                    .removeData("unobtrusiveValidation");  /* added by the jquery unobtrusive plugin*/

                $.validator.unobtrusive.parse('#userEditPost');

                if ($("#userEditPost").valid()) {

                    var model = $("form").serializeArray();


                    var logout = $("a[href$='Account/LogOut']").text();
                    var loggedUsername = logout.replace('Exit ', '');


                    var logout = $("a[href$='Account/LogOut']").text();
                    var loggedUsername = logout.replace('Exit ', '');

                    var data = new FormData();
                    var password = false;
                    var roles = false;
                   // var connection = false;
                        var newConnection=$("[name='my-checkbox1']").bootstrapSwitch('state');
                    


                    if ($("#IsChangePassword").is(':checked'))
                        password = true;
                    if ($("#IsChangeRoles").is(':checked'))
                        roles = true;
                    //if ($("#ChangeConnection").is(':checked'))
                    //    connection = true;

                    data.append("userData[]", loggedUsername)
                    data.append("userData[]", $("#UserName").val())
                    data.append("userData[]", $("#Password").val())
                    data.append("userData[]", $("#Email").val())
                    data.append("userData[]", $("#FullName").val())
                    data.append("userData[]", $("#Roles").val())
                    data.append("userData[]", $("#Id").val())
                    data.append("userData[]", password)
                    data.append("userData[]", roles)
                    data.append("userData[]", $("#ConfirmPassword").val())
                    data.append("userData[]", connection)



                    var _model =
                    {
                        Id: $("#Id").val(),
                        UserName: $("#UserName").val(),
                        Password: $("#Password").val(),
                        Email: $("#Email").val(),
                        FullName: $("#FullName").val(),
                        Roles: $("#Roles").val(),
                        ConfirmPassword: $("#ConfirmPassword").val(),
                        ChangeConnection: newConnection,
                        IsChangePassword: password,
                        IsChangeRoles: roles,
                        PreviousConnection: connection
                    };
                    $.ajax(
                        {
                            url: "https://localhost:44379/api/User/Edit/",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify(_model),
                            method: "Post",
                            dataType: 'json',
                            success: function (response) {

                                    if (response.executionStatus == "OK") {
                                        $("#myModal").modal("hide");
                                        $('#myTable').DataTable().ajax.reload();
                                    }

                                    if (response.executionStatus == "NOTVALID") {


                                        $(".modal-body").html(response.viewPage);
                                        $('select').selectpicker();
                                        $("[name='my-checkbox1']").bootstrapSwitch();
                                        $("[name='my-checkbox2']").bootstrapSwitch();
                                        $("[name='my-checkbox3']").bootstrapSwitch();

                                        $("#userEditPost").validate().showErrors({
                                            "UserName": response.validationMessages.UserName,
                                            "Email": response.validationMessages.Email,
                                            "ConfirmPassword": response.validationMessages.ConfirmPassword,
                                            "IsChangeRoles": response.validationMessages.IsChangeRoles,
                                            "Password": response.validationMessages.Password

                                        })




                                        $("[name='my-checkbox3']").on('switchChange.bootstrapSwitch', function (e, data) {
                                            var state = $(this).bootstrapSwitch('state');//returns true or false
                                            if (state) {
                                                $(".changeRoles").show();
                                            }
                                            else {
                                                $(".changeRoles").hide();
                                            }
                                        });


                                        $("[name='my-checkbox2']").on('switchChange.bootstrapSwitch', function (e, data) {
                                            var state = $(this).bootstrapSwitch('state');//returns true or false
                                            if (state) {
                                                $(".newpassword").show();
                                            }
                                            else {
                                                $(".newpassword").hide();
                                            }
                                        });


      

                                        /////////////////////////////////////

                                        //if ($("#IsChangePassword").is(":checked")) {
                                        //    $("#ConfirmPassword").prop("disabled", false);
                                        //    $("#Password").prop("disabled", false);
                                        //}
                                        //else {
                                        //    $("#ConfirmPassword").prop("disabled", true);
                                        //    $("#Password").prop("disabled", true);
                                        //}

                                        //$("#IsChangePassword").on("change", function (e) {
                                        //    if ($(this).is(":checked")) {
                                        //        $("#ConfirmPassword").prop("disabled", false);
                                        //        $("#Password").prop("disabled", false);
                                        //    }
                                        //    else {
                                        //        $("#ConfirmPassword").prop("disabled", true);
                                        //        $("#Password").prop("disabled", true);
                                        //    }
                                        //})

                                        //if ($("#IsChangeRoles").is(':checked'))
                                        //    $('#Roles').attr('disabled', false);

                                        //else
                                        //    $('#Roles').attr("disabled", true);



                                        //$('#IsChangeRoles').change(function () {
                                        //    if ($(this).is(':checked')) {
                                        //        $('#Roles').attr('disabled', false);
                                        //        $('.disabled').css('color', 'black');
                                        //    }

                                        //    else
                                        //        $('#Roles').attr("disabled", true);
                                        //})


                                    }


                            }
                        })
                }
            })
        });

    </script>
}

