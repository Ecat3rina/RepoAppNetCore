// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepoApp.DAL.Context;

namespace RepoApp.DAL.Migrations
{
    [DbContext(typeof(FirstContext))]
    partial class FirstContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RepoApp.DAL.Entities.DMDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMRepository", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Repositories");
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMRepositoryType", b =>
                {
                    b.Property<Guid>("RepositoryTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RepositoryTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepositoryTypeId");

                    b.ToTable("RepositoryTypes");
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ae6d943-6dd5-451a-9c64-4caf213559f6"),
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c41722d4-482e-42d2-b24b-50cbbe387996"),
                            Email = "catea@mail",
                            FullName = "Catea",
                            IsConnected = true,
                            Password = "cat",
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("c41722d4-482e-42d2-b24b-50cbbe387996"),
                            RoleId = new Guid("5ae6d943-6dd5-451a-9c64-4caf213559f6")
                        });
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMProject", b =>
                {
                    b.HasOne("RepoApp.DAL.Entities.DMDepartment", "Department")
                        .WithMany("Projects")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RepoApp.DAL.Entities.DMUser", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMRepository", b =>
                {
                    b.HasOne("RepoApp.DAL.Entities.DMProject", "Project")
                        .WithMany("Repositories")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RepoApp.DAL.Entities.DMRepositoryType", "Type")
                        .WithMany("Repositories")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RepoApp.DAL.Entities.DMUser", "User")
                        .WithMany("Repositories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMUserRole", b =>
                {
                    b.HasOne("RepoApp.DAL.Entities.DMRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RepoApp.DAL.Entities.DMUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMDepartment", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMProject", b =>
                {
                    b.Navigation("Repositories");
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMRepositoryType", b =>
                {
                    b.Navigation("Repositories");
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("RepoApp.DAL.Entities.DMUser", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Repositories");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
